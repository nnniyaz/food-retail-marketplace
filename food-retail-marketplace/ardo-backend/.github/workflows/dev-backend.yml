name: Dev Backend

on:
  workflow_dispatch:

env:
  REGISTRY: "registry.digitalocean.com/ardogroup"
  CLUSTER_NAME: "k8s-kamigroup"

  DOCKERFILE_PATH: "Dockerfile"
  IMAGE_NAME: "ardo-backend"

  DEPLOYMENT_FILE_PATH: ".droplet/dev-deployment.yml"
  DEPLOYMENT_NAME: "dev-kami-menus-deployment"

jobs:
  # The "build" workflow
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Build container image
        run: docker build -f $DOCKERFILE_PATH -t $REGISTRY/$IMAGE_NAME:$GITHUB_RUN_ID .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $REGISTRY/$IMAGE_NAME:$GITHUB_RUN_ID

  # The "deploy" workflow
  deploy:
    runs-on: ubuntu-latest
    needs: build # Run when "build" workflow succeeds
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Update deployment file
        run: sed -i 's|<IMAGE>|'"$REGISTRY/$IMAGE_NAME:$GITHUB_RUN_ID"'|' $DEPLOYMENT_FILE_PATH

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: SSH into Digital Ocean Droplet
        run: |
          scp -i $DROPLET_SSH_KEY -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r $DEPLOYMENT_FILE_PATH ${{ secrets.DIGITALOCEAN_DROPLET_USERNAME }}@${{ secrets.DIGITALOCEAN_DROPLET_IP }}:.droplet
          ssh -i $DROPLET_SSH_KEY -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.DIGITALOCEAN_DROPLET_USERNAME }}@${{ secrets.DIGITALOCEAN_DROPLET_IP }} "docker-compose -f .droplet/dev-deployment.yml up -d"

      - name: Verify deployment
        run: echo "Deployment verification steps here"
