// code generated by gen.go
// DO NOT EDIT.
package core

const (
	TXT_UNKNOWN_ERROR        TxtKey = 1
	TXT_EMPTY_FIRSTNAME      TxtKey = 2
	TXT_FIRSTNAME_TOO_SHORT  TxtKey = 3
	TXT_FIRSTNAME_TOO_LONG   TxtKey = 4
	TXT_EMPTY_LASTNAME       TxtKey = 5
	TXT_LASTNAME_TOO_SHORT   TxtKey = 6
	TXT_LASTNAME_TOO_LONG    TxtKey = 7
	TXT_EMPTY_PASSWORD       TxtKey = 8
	TXT_PASSWORD_TOO_SHORT   TxtKey = 9
	TXT_PASSWORD_TOO_LONG    TxtKey = 10
	TXT_INVALID_PASSWORD     TxtKey = 11
	TXT_SAME_PASSWORD        TxtKey = 12
	TXT_EMPTY_EMAIL          TxtKey = 13
	TXT_INVALID_EMAIL        TxtKey = 14
	TXT_EMAIL_DOESNT_EXIST   TxtKey = 15
	TXT_EMAIL_ALREADY_EXISTS TxtKey = 16
	TXT_INVALID_USER_TYPE    TxtKey = 17
	TXT_USER_NOT_FOUND       TxtKey = 18
	TXT_ACCOUNT_NOT_ACTIVE   TxtKey = 19
)

var Txts = TxtResource{
	TXT_UNKNOWN_ERROR: MlString{
		RU: `Неизвестная ошибка`,
		EN: `Unknown error`,
	},
	TXT_EMPTY_FIRSTNAME: MlString{
		RU: `Имя не может быть пустым`,
		EN: `First name can not be empty`,
	},
	TXT_FIRSTNAME_TOO_SHORT: MlString{
		RU: `Имя должно быть не менее 6 символов`,
		EN: `First name must be at least 6 characters`,
	},
	TXT_FIRSTNAME_TOO_LONG: MlString{
		RU: `Имя должно быть не более 50 символов`,
		EN: `First name must be no more than 50 characters`,
	},
	TXT_EMPTY_LASTNAME: MlString{
		RU: `Фамилия не может быть пустой`,
		EN: `Last name can not be empty`,
	},
	TXT_LASTNAME_TOO_SHORT: MlString{
		RU: `Фамилия должна быть не менее 6 символов`,
		EN: `Last name must be at least 6 characters`,
	},
	TXT_LASTNAME_TOO_LONG: MlString{
		RU: `Фамилия должна быть не более 50 символов`,
		EN: `Last name must be no more than 50 characters`,
	},
	TXT_EMPTY_PASSWORD: MlString{
		RU: `Пароль не может быть пустым`,
		EN: `Password can not be empty`,
	},
	TXT_PASSWORD_TOO_SHORT: MlString{
		RU: `Пароль должен быть не менее 6 символов`,
		EN: `Password must be at least 6 characters`,
	},
	TXT_PASSWORD_TOO_LONG: MlString{
		RU: `Пароль должен быть не более 32 символов`,
		EN: `Password must be no more than 32 characters`,
	},
	TXT_INVALID_PASSWORD: MlString{
		RU: `Неверный пароль`,
		EN: `Invalid password`,
	},
	TXT_SAME_PASSWORD: MlString{
		RU: `Новый пароль не может совпадать со старым`,
		EN: `New password can not be the same as the old one`,
	},
	TXT_EMPTY_EMAIL: MlString{
		RU: `Email не может быть пустым`,
		EN: `Email can not be empty`,
	},
	TXT_INVALID_EMAIL: MlString{
		RU: `Неверный формат email`,
		EN: `Invalid email`,
	},
	TXT_EMAIL_DOESNT_EXIST: MlString{
		RU: `Пользователь с таким email не существует`,
		EN: `User with this email does not exist`,
	},
	TXT_EMAIL_ALREADY_EXISTS: MlString{
		RU: `Пользователь с таким email уже существует`,
		EN: `User with this email already exists`,
	},
	TXT_INVALID_USER_TYPE: MlString{
		RU: `Неверный тип пользователя`,
		EN: `Invalid user type`,
	},
	TXT_USER_NOT_FOUND: MlString{
		RU: `Пользователь не найден`,
		EN: `User not found`,
	},
	TXT_ACCOUNT_NOT_ACTIVE: MlString{
		RU: `Аккаунт не активирован`,
		EN: `Account not activated`,
	},
}

func GetTxtKeyAsString(k TxtKey) string {
	switch k {
	case TXT_UNKNOWN_ERROR:
		return "unknown_error"
	case TXT_EMPTY_FIRSTNAME:
		return "empty_firstname"
	case TXT_FIRSTNAME_TOO_SHORT:
		return "firstname_too_short"
	case TXT_FIRSTNAME_TOO_LONG:
		return "firstname_too_long"
	case TXT_EMPTY_LASTNAME:
		return "empty_lastname"
	case TXT_LASTNAME_TOO_SHORT:
		return "lastname_too_short"
	case TXT_LASTNAME_TOO_LONG:
		return "lastname_too_long"
	case TXT_EMPTY_PASSWORD:
		return "empty_password"
	case TXT_PASSWORD_TOO_SHORT:
		return "password_too_short"
	case TXT_PASSWORD_TOO_LONG:
		return "password_too_long"
	case TXT_INVALID_PASSWORD:
		return "invalid_password"
	case TXT_SAME_PASSWORD:
		return "same_password"
	case TXT_EMPTY_EMAIL:
		return "empty_email"
	case TXT_INVALID_EMAIL:
		return "invalid_email"
	case TXT_EMAIL_DOESNT_EXIST:
		return "email_doesnt_exist"
	case TXT_EMAIL_ALREADY_EXISTS:
		return "email_already_exists"
	case TXT_INVALID_USER_TYPE:
		return "invalid_user_type"
	case TXT_USER_NOT_FOUND:
		return "user_not_found"
	case TXT_ACCOUNT_NOT_ACTIVE:
		return "account_not_active"

	default:
		return ""
	}
}
